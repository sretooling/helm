#!/usr/bin/env python3

import click
import json
import requests
import sys
import time

timeout = time.time() + 300

@click.command()
@click.option('--namespace', default='dev', help='Namespace')
@click.option('--container', default='sample-spring', help='Container')
@click.option('--tag', default='latest', help='Desired tag')
@click.option('--prometheus', default='https://prometheus.example.com/api/v1/', help='URL of prometheus endpoint')
def validate_tags(namespace, container, tag, prometheus):

    query = """
      count(
        kube_pod_container_info{{namespace="{0}",container="{1}"}}) by (image)
        """.format(
                namespace,
                container,
        )
        
    api_url = '{0}query?query={1}'.format(prometheus, query)

    response = requests.get(api_url)

    if response.status_code == 200:
        json_data = json.loads(response.content.decode('utf-8'))
        metrics = json_data['data']['result']
        tags = list(map(lambda x: x['metric']['image'].split(":")[1], metrics))
        while True:
            if len(tags) == 1 or time.time() > timeout:
                if tags[0] != tag:
                    print("[!] Validation Failed!")
                else:
                    print("[*] Successfully Validated!")
                break
            else:
                print('Failed {0}'.format(tags))
                time.sleep(5)
    else:
        print('[!] Request Failed')

if __name__ == '__main__':
    validate_tags()